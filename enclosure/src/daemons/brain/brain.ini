[settings]
volume-minimum = 0
volume-initial = 50
volume-maximum = 100
volume-step = 5

brain-sleep = 20:00
brain-wakeup = 07:00


[synapses]
control-rotary = hal9000
control-button = hal9000
volume-rotary = hal9000, sonos
volume-button = hal9000, sonos
rfid = hal9000, brickies


[trigger:control-rotary]
module = hal9000.plugins.brain.mqtt
mqtt-topic = "hal9000/enclosure/rotary/event"
mqtt-payload-regex = "rotary:control:default status=(?P<control>[+-]\d+)"


[trigger:control-button]
module = hal9000.plugins.brain.mqtt
mqtt-topic = "hal9000/enclosure/button/event"
mqtt-payload-regex = "button:control:select status=(?P<select>[01])"


[trigger:volume-rotary]
module = hal9000.plugins.brain.mqtt
mqtt-topic = "hal9000/enclosure/rotary/event"
mqtt-payload-regex = "rotary:volume:default status=(?P<volume>[+-]?\d+)"
neuron-json-formatter = '{"volume": {"delta": "%(volume)s"}}'


[trigger:volume-button]
module = hal9000.plugins.brain.mqtt
mqtt-topic = "hal9000/enclosure/button/event"
mqtt-payload-regex = "button:volume:mute status=(?P<mute>[01])"
neuron-json-formatter = '{"volume": {"mute": "%(mute)s"}}'


[trigger:rfid]
module = hal9000.plugins.brain.mqtt
mqtt-topic = "hal9000/enclosure/rfid/event"
mqtt-payload-regex = "rfid:\w+:\w+ (?P<event>\w+)=(?P<uid>\w{8})"
neuron-json-formatter = '{"rfid": {"event": "%(event)s","uid": "%(uid)s"}}'

[action:hal9000]
module = hal9000.plugins.brain.hal9000
data-regex-pattern = "..."
data-regex-repl = "..."
hal9000-control = synapse:control
hal9000-select = synapse:select
hal9000-volume = synapse:volume
hal9000-mute = synapse:mute


[action:sonos]
module = hal9000.plugins.brain.sonos
sonos-name = "Arbeitszimmer"
sonos-ip = 192.168.3.30
sonos-volume = brain:volume
sonos-mute = brain:mute


[action:brickies]
module = hal9000.plugins.brain.brickies
brickies-server-url = http://192.168.4.1/brickies-agent
brickies-reader-service = hal9000
brickies-reader-name = iot-raspberry-hal9000
brickies-card-event = jsonpath:synapse:$.rfid.event
brickies-card-uid = jsonpath:synapse:$.rfid.uid


[mqtt]
server = 127.0.0.1
port = 1883


[python]
module-paths = "../../package", "./package"

[loggers]
keys = root

[handlers]
keys=consoleHandler

[formatters]
keys=consoleFormatter

[logger_root]
level=DEBUG
handlers=consoleHandler

[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=consoleFormatter
args=(sys.stdout,)

[formatter_consoleFormatter]
format=%(asctime)s - %(threadName)10s - %(name)s - %(levelname)s - %(message)s
datefmt=

